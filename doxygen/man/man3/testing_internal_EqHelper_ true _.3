.TH "testing::internal::EqHelper< true >" 3 "Tue Jun 4 2019" "Context-Free Grammars" \" -*- nroff -*-
.ad l
.nh
.SH NAME
testing::internal::EqHelper< true >
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <gtest\&.h>\fP
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "template<typename T1 , typename T2 > static \fBAssertionResult\fP \fBCompare\fP (const char *lhs_expression, const char *rhs_expression, const T1 &lhs, const T2 &rhs, typename \fBEnableIf\fP<!\fBis_pointer\fP< T2 >::value >::type *=0)"
.br
.ti -1c
.RI "template<typename T > static \fBAssertionResult\fP \fBCompare\fP (const char *lhs_expression, const char *rhs_expression, Secret *, T *rhs)"
.br
.in -1c
.SH "Member Function Documentation"
.PP 
.SS "template<typename T1 , typename T2 > static \fBAssertionResult\fP \fBtesting::internal::EqHelper\fP< true >::Compare (const char * lhs_expression, const char * rhs_expression, const T1 & lhs, const T2 & rhs, typename \fBEnableIf\fP<!\fBis_pointer\fP< T2 >::value >::type * = \fC0\fP)\fC [inline]\fP, \fC [static]\fP"

.SS "template<typename T > static \fBAssertionResult\fP \fBtesting::internal::EqHelper\fP< true >::Compare (const char * lhs_expression, const char * rhs_expression, Secret *, T * rhs)\fC [inline]\fP, \fC [static]\fP"


.SH "Author"
.PP 
Generated automatically by Doxygen for Context-Free Grammars from the source code\&.
