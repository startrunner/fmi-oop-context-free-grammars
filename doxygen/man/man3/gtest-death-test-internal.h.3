.TH "packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0/build/native/include/gtest/internal/gtest-death-test-internal.h" 3 "Tue Jun 4 2019" "Context-Free Grammars" \" -*- nroff -*-
.ad l
.nh
.SH NAME
packages/Microsoft.googletest.v140.windesktop.msvcstl.static.rt-dyn.1.8.0/build/native/include/gtest/internal/gtest-death-test-internal.h
.SH SYNOPSIS
.br
.PP
\fC#include 'gtest/internal/gtest\-internal\&.h'\fP
.br
\fC#include <stdio\&.h>\fP
.br

.SS "Namespaces"

.in +1c
.ti -1c
.RI " \fBtesting\fP"
.br
.ti -1c
.RI " \fBtesting::internal\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGTEST_UNSUPPORTED_DEATH_TEST_\fP(statement,  regex,  terminator)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBtesting::internal::GTEST_DECLARE_string_\fP (internal_run_death_test)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "const char \fBtesting::internal::kDeathTestStyleFlag\fP [] = 'death_test_style'"
.br
.ti -1c
.RI "const char \fBtesting::internal::kDeathTestUseFork\fP [] = 'death_test_use_fork'"
.br
.ti -1c
.RI "const char \fBtesting::internal::kInternalRunDeathTestFlag\fP [] = 'internal_run_death_test'"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GTEST_UNSUPPORTED_DEATH_TEST_(statement, regex, terminator)"
\fBValue:\fP
.PP
.nf
GTEST_AMBIGUOUS_ELSE_BLOCKER_ \
    if (::testing::internal::AlwaysTrue()) { \
      GTEST_LOG_(WARNING) \
          << "Death tests are not supported on this platform\&.\n" \
          << "Statement '" #statement "' cannot be verified\&."; \
    } else if (::testing::internal::AlwaysFalse()) { \\
      ::testing::internal::RE::PartialMatch("\&.*", (regex)); \
      GTEST_SUPPRESS_UNREACHABLE_CODE_WARNING_BELOW_(statement); \
      terminator; \
    } else \
      ::testing::Message()
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for Context-Free Grammars from the source code\&.
